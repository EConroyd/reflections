Feat: new reflections lesson 1 document to commit

cd ~                          # change directories to your home directory
mkdir version-control         # make version-control directory
cd version-control            # go to version-control directory
mkdir reflections             # create reflections directory
cd reflections                # go to reflections director

How did viewing a diff between two versions of a file help you see the bug that was introduced?

2/19/2016 4:17pm

It really helped look at different areas better. it would have been almost impossible to compare thousands of lines of code in an efficient way to find the issue. 

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

2/20/2016

It could make me more efficient by quickly identifying changes that were made. If something crashes, I can immediately go to the history and the different additions that were made. 

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

2/23/2016 Tuesday 2:17 Pm

Pros: able to select appropriate time, after a logical change , more fluid/ consistent , easier to follow

Cons: more forgetful to commit, or commit after too many changes or not enough changes

How can you use the commands git log and git diff to view the history of files?

2/23/2016 3:37 PM

git log allows the user to look up all ids that occurred. git diff allows the user to compare two different files in the history 

How might using version control make you more confident to make changes that could break something?

2/24/2016 Wednesday 12:18 PM 

If I break something, I know that I can return to a previous commit or compare the current commit to the previous commit using git diff to see what was deleted or added 
-allows ppl to explore easily and efficiently 

Now that you have your workspace set up, what do you want to try using Git for?

2/24/2016 2:32 PM

I want to use git to learn more about android for the intermediate course. 
Also for most business use git. Want to be informed about how to use git. 
So excited to almost be done with lesson 1! for git and github. 
finally figured out that I was using github powershell and needed to download git bash specificially. 
its about to rain here at the welara house. 

Behavior of git checkout

Checking out an earlier commit will change the state of at least one file.

This is sometimes true. Git doesn't allow you to save a new commit if no files have been updated, so you might think this is always true. However, it's possible to do the following:

Save a commit (call this commit 1).
Update some files and save another commit (call this commit 2).
Change all the files back to their state during commit 1, then save again (call this commit 3).
This sometimes happens if commit 2 contained a bug, and it's important to fix the bug quickly. The easiest thing to do might be to remove all the changes introduced by commit 2 to fix the bug, then figure out how to safely reintroduce the changes later.

At this point, commit 3 is the latest commit, so if you checkout commit 1, none of the files will be changed. 


Checking out an earlier commit will change the state of more than one file.

Checking out an earlier commit will change the state of every file in the repository.

Both of these are sometimes true. Since each commit tracks the state of all files in the repository, it is possible that checking out an earlier commit will change the state of multiple files, or even all the files in the repository. However, it is possible to save a new commit after changing only one file, so it is possible only one file will change. 


After checking out a commit, the state of all the files in the repository will be from the same point in time.

This is always true. A commit saves a snapshot of all files in the repository at the time the commit was made, so checking out an earlier commit will result in all the files being reverted to their state at the time the commit was made. That is, the files will be in a consistent state.